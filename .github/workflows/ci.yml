name: CI/CD Pipeline

permissions:
  issues: write

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  unit-test-frontend:
    runs-on: ubuntu-latest
    environment: Production - furniture-ecommerce-frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Java
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jre
          java -version

      - name: Cache frontend dependencies
        uses: actions/cache@v4
        with:
          path: frontend/node_modules
          key: ${{ runner.os }}-frontend-${{ hashFiles('frontend/package-lock.json') }}
          restore-keys: ${{ runner.os }}-frontend-

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Setup Firebase Emulator for Frontend
        run: |
          npm install -g firebase-tools
          cd frontend
          firebase emulators:start --only firestore &
          sleep 15

      - name: Run Jest Unit Tests for React Components
        run: |
          cd frontend
          npm run test -- --coverage
        env:
          CI: true
          FIRESTORE_EMULATOR_HOST: localhost:8080
          REACT_APP_FIREBASE_API_KEY: ${{ secrets.REACT_APP_FIREBASE_API_KEY }}
          REACT_APP_FIREBASE_AUTH_DOMAIN: ${{ secrets.REACT_APP_FIREBASE_AUTH_DOMAIN }}

      - name: Archive frontend test coverage
        uses: actions/upload-artifact@v4
        with:
          name: frontend-coverage
          path: frontend/coverage

  unit-test-backend:
    runs-on: ubuntu-latest
    environment: Production - furniture-ecommerce-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache backend dependencies
        uses: actions/cache@v4
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: ${{ runner.os }}-backend-

      - name: Install backend dependencies
        run: |
          cd backend
          npm install

      - name: Run Jest Unit Tests for Product Controller
        run: |
          cd backend
          npm run test:unit -- --coverage
        env:
          CI: true
          NODE_ENV: test
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY}}
          RECAPTCHA_SECRET_KEY: ${{ secrets.RECAPTCHA_SECRET_KEY}}
          REACT_APP_FURNITURE_ECOMMERCE_ADMIN_EMAIL: admin@gmail.com
          PAYPAL_CLIENT_SECRET: ${{ secrets.PAYPAL_CLIENT_SECRET}}
          PAYPAL_CLIENT_ID: ${{ secrets.PAYPAL_CLIENT_ID}}
          JWT_SECRET: ${{ secrets.JWT_SECRET}}
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY}}

      - name: Archive backend test coverage
        uses: actions/upload-artifact@v4
        with:
          name: backend-coverage
          path: backend/coverage

  integration-test:
    runs-on: ubuntu-latest
    environment: Production - furniture-ecommerce-backend
    needs: unit-test-backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install Java
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jre
          java -version

      - name: Cache backend dependencies
        uses: actions/cache@v4
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-backend-${{ hashFiles('backend/package-lock.json') }}
          restore-keys: ${{ runner.os }}-backend-

      - name: Install backend dependencies
        run: |
          cd backend
          npm install

      - name: Check and Free Port 9090
        run: |
          sudo lsof -i :9090 || true
          sudo kill -9 $(lsof -t -i :9090) || true

      - name: Setup Firebase Emulator for Integration
        run: |
          npm install -g firebase-tools
          cd backend
          firebase emulators:start --only firestore &
          EMULATOR_PID=$!
          echo "Waiting for emulator to start..."
          sleep 45

      - name: Run Integration Tests
        run: |
          cd backend
          npm run test:integration -- --coverage
        env:
          CI: true
          NODE_ENV: test
          FIRESTORE_EMULATOR_HOST: localhost:9090
          STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY}}
          RECAPTCHA_SECRET_KEY: ${{ secrets.RECAPTCHA_SECRET_KEY}}
          REACT_APP_FURNITURE_ECOMMERCE_ADMIN_EMAIL: admin@gmail.com
          PAYPAL_CLIENT_SECRET: ${{ secrets.PAYPAL_CLIENT_SECRET}}
          PAYPAL_CLIENT_ID: ${{ secrets.PAYPAL_CLIENT_ID}}
          JWT_SECRET: ${{ secrets.JWT_SECRET}}
          FIREBASE_API_KEY: ${{ secrets.FIREBASE_API_KEY}}

      - name: Stop Firebase Emulator
        if: always()  
        run: |
          cd backend
          if [ -n "$EMULATOR_PID" ]; then
            kill -9 $EMULATOR_PID || true
            wait $EMULATOR_PID 2>/dev/null || true
          fi

      - name: Archive backend test coverage
        if: always() 
        uses: actions/upload-artifact@v4
        with:
          name: backend-integration-coverage
          path: backend/coverage

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm install

      - name: Run Frontend Integration Tests
        run: |
          cd frontend
          npm run test:integration 
        env:
          CI: true
          NODE_ENV: test

  security-scan:
    runs-on: ubuntu-latest
    needs: integration-test
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: javascript
          queries: security-and-quality

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  notify:
    runs-on: ubuntu-latest
    needs: [unit-test-frontend, unit-test-backend, integration-test, security-scan]
    if: failure()
    steps:
      - name: Create issue on failure
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'CI/CD Pipeline Failure',
              body: 'The CI/CD pipeline failed. Please check the logs for details.\n\nRun ID: ${{ github.run_id }}',
              labels: ['pipeline-failure']
            })